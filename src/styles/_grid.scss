@use "sass:math";

$grid-columns: 12;

$layout-vals: flex-start, flex-end, center, space-between, space-around;

@each $key, $val in $unit-increments {
  .grid-gap-#{$key} > * {
    padding: 0 $val;
  }
  // this counters the start and end padding
  // .grid-gap-#{$key} {
  //   margin-left: -$val;
  //   margin-right: -$val;
  // }
}

// justify content
@each $val in $layout-vals {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// cols
@include xs {
  @for $i from 1 through $grid-columns {
    .col-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include sm {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
