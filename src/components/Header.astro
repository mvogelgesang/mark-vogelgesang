---
import HeaderLink from "./HeaderLink.astro";
import { NAVIGATION } from "../config";
import ThemeIcon from "./ThemeIcon.astro";
---

<header>
  <nav
    class="flex items-center justify-between flex-wrap py-4 px-2 sm:px-4 my-0 mx-auto max-w-128 border-solid border-b-4 border-accent-one"
  >
    <div class="flex items-center shrink-0 mr-6">
      <span
        class="font-extrabold font-sans text-xl text-primary-color tracking-tight"
        ><a href={NAVIGATION[0].path}>{NAVIGATION[0].label}</a></span
      >
    </div>
    <div class="block lg:hidden">
      <button
        class="flex items-center px-3 py-2 border rounded-sm hover:text-white hover:border-white"
        id="menu"
      >
        <svg
          class="fill-text h-3 w-3"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
          ><title>Menu</title><path
            d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path></svg
        >
      </button>
    </div>
    <div
      class="w-full block grow lg:flex lg:items-center lg:w-auto hidden"
      id="nav-list"
    >
      <div class="lg:grow">
        {
          NAVIGATION.map((x, index) => {
            if (index === 0) return;
            return (
              <HeaderLink
                href={x.path}
                class="block p-4 text-primary-color font-semibold font-sans lg:inline-block lg:mt-0 hover:bg-secondary-color hover:text-background"
              >
                {x.label}
              </HeaderLink>
            );
          })
        }
        <ThemeIcon
          class="block p-4 text-primary-color font-semibold lg:inline-block lg:mt-0 hover:bg-secondary-color hover:text-background"
        />
      </div>
    </div>
  </nav>
</header>

<script is:inline>
  const enableButton = () => {
    const button = document.querySelector("#menu");
    const navList = document.querySelector("#nav-list");
    const navListItem = document.querySelectorAll("#nav-list div a");

    if (button) {
      button.addEventListener("click", () => clickHamburger());
    }

    let menuClosed = true;
    function clickHamburger() {
      if (button) {
        button.setAttribute(
          "aria-label",
          menuClosed ? "Open Menu" : "Close Menu"
        );
      }
      if (navList) {
        navList.classList.toggle("hidden");
      }

      menuClosed = !menuClosed;
    }
  };

  document.addEventListener("astro:page-load", enableButton, { once: true });
  document.addEventListener("astro:after-swap", enableButton);
</script>
